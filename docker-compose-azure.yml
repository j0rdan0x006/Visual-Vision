name: Build and Deploy to Azure

on:
  push:
    branches: [ main ]  # trigger on push to main branch (adjust as needed)

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Check out code
      - uses: actions/checkout@v3

      # 2. Log in to Azure (using service principal credentials)
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}   # The service principal credentials from GitHub Secrets

      # 3. Log in to Azure Container Registry (ACR)
      - uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ACR_NAME }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # 4. Build and push the backend image
      - name: Build and push Backend image
        run: |
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/backend:latest -f backend/Dockerfile ./backend
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/backend:latest

      # 5. Build and push the frontend image
      - name: Build and push Frontend image
        run: |
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/frontend:latest -f frontend/Dockerfile ./frontend
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/frontend:latest

      # 6. Deploy to Azure App Service with the new images
      - name: Deploy to Azure App Service
        run: |
          az webapp config container set --name ${{ secrets.APP_NAME }} \
            --resource-group ${{ secrets.RESOURCE_GROUP }} \
            --multicontainer-config-file docker-compose-azure.yml \
            --docker-registry-server-url https://${{ secrets.ACR_NAME }}.azurecr.io \
            --docker-registry-server-user ${{ secrets.ACR_USERNAME }} \
            --docker-registry-server-password ${{ secrets.ACR_PASSWORD }}
